function [config] = simulation_config_wrapper(ntarget, reward, Use_Void, rotation_time)
%     warning('Target ID must be mapped to continous integer starting with one.');

    % some global parameter
    planning_interval = 10 + rotation_time;
    noise_sigma = 4;
    noise_gen = 4;
    lookahead = 2;
    likelihood_type = Likelihood_Type.imprecise;
    imprecision_range = repmat([-16; 9], 1, ntarget); 
    pd = 0.9;

    antenna = Antenna_Type.H;
    
    vmax = 10;
    target_id_list = (1:ntarget);

    selected_area = 'victor_harbor';  
    if strcmp(selected_area, 'victor_harbor')
        DEM_file = 'Victor_hilly';
        birth_state = [1363, 606.5, 0.2; 1135.8, 775.2, 0.2; 1374.8, 824, 0.2; 1612, 677, 0.2]';    % victor
        area_gps = get_gps_boundary('Victor_Harbor_Hill_good');
    elseif strcmp(selected_area, 'swan_reach')
        DEM_file = 'Swan_Reach_DEM';
        birth_state = [2409, 1503, 0.2; 2412, 1367, 0.2; 2251, 1547, 0.2; 2400, 1604, 0.2]';    % swan reach
        area_gps = get_gps_boundary('Swan_Reach_full_area');
    end
    
    term_cond = Termination_Method.det;     % termination condition
    threshold = 1e5;
    sensitivity = -75;                      % detection threshold
               
    birth_state = birth_state(:, 1:ntarget);
    birth_death = repmat([1;1e30], 1, ntarget);
    P0_truth = 20*ones(1,ntarget);
    P0_model = 18*ones(1,ntarget);
    frequency = 150e6+1e4*(1:ntarget);
    path_loss_truth = 2.65*ones(1,ntarget);
    path_loss_model = 2.65*ones(1, ntarget);
    tree_h = ones(1,ntarget);
    
    %% Simulation configuration
    % setup measurements generator
    sim_sensor_config = init_sim_sensor_config(...
        'Antenna'    ,      Antenna_Type.H,...
        'Pd'         ,      pd,...
        'Sensitivity',      sensitivity,...
        'Sigma'      ,      noise_gen ...
     );

    sim_target_config = init_sim_target_config( ...
        'Ntarget',           ntarget,...
        'Mode',              'WD',...
        'nx',                3,...
        'dt',                1,...
        'Noise_Cov',         0*diag([2.5, 2.5, 0]),...
        'Transition_Model',  eye(3),...
        'Init_State',        birth_state, ...
        'Birth_Death',       birth_death ...
    );
                                          

    % setup target transmitter 
    sim_target_radio_config = init_sim_target_radio_config( ...
        'NTarget',      ntarget, ...
        'P0',           P0_truth,...
        'Frequency',    frequency,...
        'Path_Loss',    path_loss_truth,...
        'Tree_Height',  tree_h...
     );

    %=====================================================================================

    %% Setup System configurations
    area_config = init_area_config( ...
                'GPS', area_gps, ...
                'DEM', DEM_file);                
                
    % setup uav parameter
    uav_config = init_uav_config( ...  
        'traject_time', planning_interval, ...
        'rotation_time', rotation_time, ...
        'vmax', vmax ...
    );         

    % setup sensor config - system
    RSSI_sensor_config = init_RSSI_sensor_config( ...
        'Antenna',          antenna, ... 
        'Sensitivity',      sensitivity, ...
        'Sigma_RSSI',       noise_sigma, ...
        'Path_Loss',        path_loss_model, ...
        'P0',               P0_model, ...
        'Likelihood_Type',  likelihood_type, ...
        'Imprecision_Range', imprecision_range, ...
        'target_id_list', target_id_list ...
    );
    AoA_sensor_config = init_AoA_sensor_config( ...
        'Antenna',          antenna, ... 
        'Sigma_aoa',        sqrt(0.0075) ...
    );

    % setup target model
    target_config = init_target_config( ...
        'Ntarget',          ntarget, ...
        'Mode',             'WD',...
        'nx',               3,...
        'dt',               1,...
        'Noise_Cov',        diag([2.5, 2.5, 0.0025]),...
        'Transition_Model', eye(3)...
    );

    % setup planner
    planner_config = init_planner_config( ...
     'alpha',               0.1, ...
     'Discount',            1, ...
     'Heading_number',      8, ...
     'T',                   planning_interval,...
     'Variable_lookahead',  boolean(0), ...
     'Lookahead',           lookahead, ...
     'Use_Void',            Use_Void, ...
     'Void_r',              50, ...
     'Void_th',             0.95, ...
     'Mode',                Planning_Meas_Mode.PIMS, ...
     'Reward',              reward, ...
     'Plan_target',         'Closest', ...
     'Planning_sample',     1000, ...
     'MC_sample',           30, ...
     'Density_type',        Density_Type.Bernoulli, ...
     'Rotation_time',       rotation_time ...
   );


    % setup filter
    RSSI_filter_config = init_RSSI_filter_config( ...
        'cz', 1/60,...
        'nx', 3,...
        'Pb', 1e-6,...
        'Pd', pd,...
        'Pf', 0.1,...
        'Ps', 0.99, ...
        'Regularized', false ...
    );

    AoA_filter_config = init_AoA_filter_config( ...
        'cz', 1/(2*pi),...
        'nx', 3,...
        'Pb', 1e-6,...
        'Pd', 0.9,...
        'Pf', 0.1,...
        'Ps', 0.99, ...
        'Regularized', false ...
    );

    AoA_config = init_bearing_config( ...
        'Interpolate_factor', 10, ...
        'Antenna', Antenna_Type.H, ...
        'Move_time', planning_interval - rotation_time, ...
        'Samples', rotation_time ...
        );
    
    Term_config = init_term_config(term_cond, threshold);

                                
config.sim_sensor_config = sim_sensor_config;
config.sim_target_config = sim_target_config;
config.sim_target_radio_config = sim_target_radio_config;
config.area_config = area_config;
config.uav_config = uav_config;
config.RSSI_sensor_config = RSSI_sensor_config;
config.AoA_sensor_config = AoA_sensor_config;
config.target_config = target_config;
config.planner_config = planner_config;
config.RSSI_filter_config = RSSI_filter_config;   
config.AoA_filter_config = AoA_filter_config;
config.AoA_config = AoA_config;
config.Term_config = Term_config;
config.target_id_list = target_id_list;
end

