function [config] = Experiment_config_wrapper(ntarget, reward, Use_Void, rotation_time)
    warning('Target ID must be mapped to continous integer starting with one.');


    % some global parameter
    planning_interval = 10 + rotation_time;
    noise_sigma = 6;
    lookahead = 3;
    likelihood_type = Likelihood_Type.imprecise;
    imprecision_range = repmat([-20; 12], 1, ntarget);  % flat
    threshold = 2e4;
    DEM_file = 'Kooloka_DEM';
    
    % TO BE ADDED TO STRUCT

     
    % setup truth target configuration
    birth_state = [1108.7, 1119.6, 1698.1, 923.8; ...
                   1106.2, 1658.3, 1386.5, 898.1;  ...
                   0.2, 0.2, 0.2,  0.2];
    P0_list = [40, 40, 40, 40];
    
    birth_state = birth_state(:, 1:ntarget);
    birth_death = repmat([1;1e30], 1, ntarget);
    P0_truth = P0_list(1:ntarget);
    P0_model = 40*ones(1,ntarget);
    frequency = 150e6+1e4*(1:ntarget);
    path_loss_truth = 4*ones(1,ntarget);
    path_loss_model = 4*ones(1, ntarget);
    tree_h = ones(1,ntarget);
    




    %% Simulation configuration
    % wrapper for each module's settings

    % setup measurements generator
    sim_sensor_config = init_sim_sensor_config(...
        'Antenna'    ,      Antenna_Type.H,...
        'Pd'         ,      0.99,...
        'Sensitivity',      -135,...
        'Sigma'      ,      noise_sigma ...
     );





    sim_target_config = init_sim_target_config( ...
        'Ntarget',           ntarget,...
        'Mode',              'WD',...
        'nx',                3,...
        'dt',                1,...
        'Noise_Cov',         diag([2.5, 2.5, 0]),...
        'Transition_Model',  eye(3),...
        'Init_State',        birth_state, ...
        'Birth_Death',       birth_death ...
    );
                                          

    % setup target transmitter 
    sim_target_radio_config = init_sim_target_radio_config( ...
        'NTarget',      ntarget, ...
        'P0',           P0_truth,...
        'Frequency',    frequency,...
        'Path_Loss',    path_loss_truth,...
        'Tree_Height',  tree_h...
     );

    %=====================================================================================

    %% Setup System configurations

    % setup area
%     area_vertex = [186.2, 111.2; 242.1 77.4; 545.3, 520.5; 495.2, 561.2; 186.2, 111.2]'; % charlick farm
    area_vertex = [368.8, 1658.3; 672.4, 1819.5; 2193.6, 722.6; 2077.6, 466.7; 731.6, 589.8; 368.8, 1658.3]'; % kooloka station
%     area_vertex = [1509.3, 731.2; 1343.9, 479.4; 1053.8, 559.3; 1176.0, 869.3; 1509.3, 731.2]'; % kooloka small
    area_config = init_area_config( ...
                    'Vertex', area_vertex, ...
                    'DEM', DEM_file);              

    % setup uav parameter
    uav_config = init_uav_config( ...  
        'traject_time', planning_interval, ...
        'rotation_time', rotation_time, ...
        'vmax', 5 ...
    );         

    % setup sensor config - system
    RSSI_sensor_config = init_RSSI_sensor_config( ...
        'Antenna',          Antenna_Type.H, ... 
        'Sensitivity',      -135, ...
        'Sigma_RSSI',       noise_sigma, ...
        'Path_Loss',        path_loss_model, ...
        'P0',               P0_model, ...
        'Likelihood_Type',  likelihood_type, ...
        'Imprecision_Range', imprecision_range ...
    );
    AoA_sensor_config = init_AoA_sensor_config( ...
        'Antenna',          Antenna_Type.H, ... 
        'Sigma_aoa',        sqrt(bearing_variance(rotation_time)) ...
    );

    % setup target model
    target_config = init_target_config( ...
        'Ntarget',          ntarget, ...
        'Mode',             'WD',...
        'nx',               3,...
        'dt',               1,...
        'Noise_Cov',        diag([2.5, 2.5, 0.0025]),...
        'Transition_Model', eye(3)...
    );

    % setup planner
    planner_config = init_planner_config( ...
     'alpha',               0.1, ...
     'Discount',            1, ...
     'Heading_number',      8, ...
     'T',                   planning_interval,...
     'Variable_lookahead',  false, ...
     'Lookahead',           lookahead, ...
     'Use_Void',            Use_Void, ...
     'Void_r',              50, ...
     'Mode',                Planning_Meas_Mode.PIMS, ...
     'Reward',              reward, ...
     'Plan_target',         'Closest', ...
     'Planning_sample',     1000, ...
     'Density_type',        Density_Type.Bernoulli ...
   );


    % setup filter
    RSSI_filter_config = init_RSSI_filter_config( ...
        'cz', 1/135,...
        'nx', 3,...
        'Pb', 1e-4,...
        'Pd', 0.9,...
        'Pf', 0.05,...
        'Ps', 0.99, ...
        'Regularized', false ...
    );

    AoA_filter_config = init_AoA_filter_config( ...
        'cz', 1/(2*pi),...
        'nx', 3,...
        'Pb', 5e-4,...
        'Pd', 0.9,...
        'Pf', bearing_error(rotation_time),...
        'Ps', 0.99, ...
        'Regularized', false ...
    );

    AoA_config = init_bearing_config( ...
        'Interpolate_factor', 10, ...
        'Antenna', Antenna_Type.H, ...
        'Move_time', planning_interval - rotation_time, ...
        'Samples', rotation_time ...
        );
    
    Term_config = init_term_config(Termination_Method.det, threshold);

                                
config.sim_sensor_config = sim_sensor_config;
config.sim_target_config = sim_target_config;
config.sim_target_radio_config = sim_target_radio_config;
config.area_config = area_config;
config.uav_config = uav_config;
config.RSSI_sensor_config = RSSI_sensor_config;
config.AoA_sensor_config = AoA_sensor_config;
config.target_config = target_config;
config.planner_config = planner_config;
config.RSSI_filter_config = RSSI_filter_config;   
config.AoA_filter_config = AoA_filter_config;
config.AoA_config = AoA_config;
config.Term_config = Term_config;
                                
end


function v = bearing_variance(sample)
if sample < 10
    error('Error: sample size must be larger than 10.');
end
    v = 0.105/(sample - 6.034);
end

function e = bearing_error(sample)
if sample < 10
    error('Error: sample size must be larger than 10.');
end
    e = 7.309/(sample^2-14.42*sample+78.01);
end
