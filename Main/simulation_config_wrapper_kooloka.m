function [config] = simulation_config_wrapper_kooloka(ntarget, reward, Use_Void, rotation_time)
    warning('Target ID must be mapped to continous integer starting with one.');


    % some global parameter
    move_time = 10;
    planning_interval = move_time + rotation_time;
    noise_sigma = 8;
    lookahead = 2;
    likelihood_type = Likelihood_Type.imprecise;
    imprecision_range = repmat([-8; 5], 1, ntarget);  % flat
    threshold = 0.1e3;
    noise_q = 0.01;
    vmax = 5;
    DEM_file = 'Kooloka_DEM';
    sensitivity = -90;
    target_id_list = [1];
    
    % TO BE ADDED TO STRUCT
     
    % setup truth target configuration

    birth_state = repmat([1614, 1365, 0.8]', 1, length(target_id_list));
    P0_list = 45*ones(1, length(target_id_list));   % proper connector (flat)
    n_list = 2.5*ones(1, length(target_id_list));   % proper connector (hilly)
    
    birth_state = birth_state(:, 1:ntarget);
    birth_death = repmat([1;1e30], 1, ntarget);
    P0_truth = P0_list(1:ntarget);
    P0_model = P0_list(1:ntarget);
    frequency = 150e6+1e4*(1:ntarget);
    path_loss_truth = 2.5*ones(1,ntarget);
    path_loss_model = 1*n_list(1:ntarget);
    tree_h = ones(1,ntarget);


    %% Simulation configuration
    % wrapper for each module's settings

    % setup measurements generator
    sim_sensor_config = init_sim_sensor_config(...
        'Antenna'    ,      Antenna_Type.H,...
        'Pd'         ,      0.99,...
        'Sensitivity',      sensitivity,...
        'Sigma'      ,      noise_sigma ...
     );


    sim_target_config = init_sim_target_config( ...
        'Ntarget',           ntarget,...
        'Mode',              'WD',...
        'nx',                3,...
        'dt',                1,...
        'Noise_Cov',         noise_q*diag([2.5, 2.5, 0]),...
        'Transition_Model',  eye(3),...
        'Init_State',        birth_state, ...
        'Birth_Death',       birth_death ...
    );
                                          

    % setup target transmitter 
    sim_target_radio_config = init_sim_target_radio_config( ...
        'NTarget',      ntarget, ...
        'P0',           P0_truth,...
        'Frequency',    frequency,...
        'Path_Loss',    path_loss_truth,...
        'Tree_Height',  tree_h...
     );

    %=====================================================================================

    %% Setup System configurations

    % setup area
           

%     area_gps = [-34.538789, 139.596840; -34.537340, 139.593482; -34.539541, 139.591529; -34.540867, 139.595263]'; % Kooloka small near house
%     area_gps = [-34.538764, 139.596109; -34.532855, 139.586239; -34.535314, 139.583049; -34.541683, 139.595622]'; % Kooloka large
     area_gps = [-34.538731, 139.596426; -34.529623, 139.580682; -34.530676, 139.577097; -34.544895, 139.583567; -34.548188, 139.592038]'; % Kooloka full

%     area_gps = [-34.535660498238265,139.59144187430115; ...
%                 -34.536862475372644,139.59007931209692; ...
%                 -34.53847981424788,139.59315848807455; ...
%                 -34.53710993908132,139.59468198277546]';        % kooloka calibration
%             
        
    area_config = init_area_config( ...
                    'GPS', area_gps, ...
                    'DEM', DEM_file);              

    % setup uav parameter
    uav_config = init_uav_config( ...  
        'traject_time', planning_interval, ...
        'rotation_time', rotation_time, ...
        'timeout', 15, ...
        'vmax', vmax ...
    );         

    % setup sensor config - system
    RSSI_sensor_config = init_RSSI_sensor_config( ...
        'Antenna',          Antenna_Type.H, ... 
        'Sensitivity',      sensitivity, ...
        'Sigma_RSSI',       noise_sigma, ...
        'Path_Loss',        path_loss_model, ...
        'P0',               P0_model, ...
        'Likelihood_Type',  likelihood_type, ...
        'Imprecision_Range', imprecision_range, ...
        'target_id_list', target_id_list ...
    );
    AoA_sensor_config = init_AoA_sensor_config( ...
        'Antenna',          Antenna_Type.H, ... 
        'Sigma_aoa',        sqrt(bearing_variance(rotation_time)) ...
    );

    % setup target model
    target_config = init_target_config( ...
        'Ntarget',          ntarget, ...
        'Mode',             'WD',...
        'nx',               3,...
        'dt',               1,...
        'Noise_Cov',        diag([2.5, 2.5, 0.0025]),...
        'Transition_Model', eye(3)...
    );

    % setup planner
    planner_config = init_planner_config( ...
     'alpha',               0.1, ...
     'Discount',            1, ...
     'Heading_number',      8, ...
     'T',                   planning_interval,...
     'Variable_lookahead',  false, ...
     'Lookahead',           lookahead, ...
     'Use_Void',            Use_Void, ...
     'Void_r',              35, ...
     'Void_th',             0.95, ...
     'Mode',                Planning_Meas_Mode.PIMS, ...
     'Reward',              reward, ...
     'Plan_target',         'Closest', ...
     'Planning_sample',     1000, ...
     'Density_type',        Density_Type.Bernoulli ...
   );


    % setup filter
    RSSI_filter_config = init_RSSI_filter_config( ...
        'cz', 1/60,...
        'nx', 3,...
        'Pb', 1e-6,...
        'Pd', 0.9,...
        'Pf', 0.2,...
        'Ps', 0.99, ...
        'Regularized', boolean(0) ...
    );

    AoA_filter_config = init_AoA_filter_config( ...
        'cz', 1/(2*pi),...
        'nx', 3,...
        'Pb', 1e-5,...
        'Pd', 0.9,...
        'Pf', 0.05,...
        'Ps', 0.99, ...
        'Regularized', false ...
    );

    AoA_config = init_bearing_config( ...
        'Interpolate_factor', 10, ...
        'Antenna', Antenna_Type.H, ...
        'Move_time', planning_interval - rotation_time, ...
        'Samples', rotation_time ...
        );
    
    Term_config = init_term_config(Termination_Method.det, threshold);

                                
config.sim_sensor_config = sim_sensor_config;
config.sim_target_config = sim_target_config;
config.sim_target_radio_config = sim_target_radio_config;
config.area_config = area_config;
config.uav_config = uav_config;
config.RSSI_sensor_config = RSSI_sensor_config;
config.AoA_sensor_config = AoA_sensor_config;
config.target_config = target_config;
config.planner_config = planner_config;
config.RSSI_filter_config = RSSI_filter_config;   
config.AoA_filter_config = AoA_filter_config;
config.AoA_config = AoA_config;
config.Term_config = Term_config;
config.target_id_list = target_id_list;
                                
end


function v = bearing_variance(sample)
    if sample < 10
        error('Error: sample size must be larger than 10.');
    else
        v = 3*0.105/(sample - 6.034);
    end
end

